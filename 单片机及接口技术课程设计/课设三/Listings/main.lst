C51 COMPILER V9.54   MAIN                                                                  12/05/2024 17:43:10 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX51.H>
   2          #include "csb.h"
   3          
   4          unsigned char num;  //按键值
   5          unsigned int count; //中断值
   6          unsigned char distance;  //超声波距离
   7          unsigned char mode=1; //模式
   8          unsigned char temp_distance[10]={0,0,0,0,0,0,0,0,0,0};
   9          char i=-1,n=-1;
  10          unsigned char j;
  11          unsigned int processed_data;
  12          unsigned char mangqu=10;
  13          bit key_flag,csb_measure_flag,cao_zuo;
  14          ///////////////////led//////////////////////////
  15          bit led1_blink_flag=0,led1_state=0;
  16          unsigned char led1_blink_count=0;
  17          ////////////////////led/////////////////////////
  18          
  19          sbit S7 = P3 ^ 0; // S7 
  20          sbit S6 = P3 ^ 1; // S6 
  21          sbit S5 = P3 ^ 2; // S5 
  22          sbit S4 = P3 ^ 3; // S4
  23          
  24          void ce_ju_show();
  25          void shu_ju_hui_show();
  26          void can_shu_set();
  27          void multi_function();
  28          
  29          void Delay(unsigned int xms)
  30          {
  31   1        unsigned char i, j;
  32   1        while(xms--)
  33   1        {
  34   2          i = 2;
  35   2          j = 239;
  36   2          do
  37   2          {
  38   3            while (--j);
  39   3          } while (--i);
  40   2        }
  41   1      }
  42          
  43          void Sys_Init(){
  44   1        P0=0xff;P2=(P2 & 0x1f) | 0x80;P2=(P2 & 0x1f);
  45   1        P0=0xaf;P2=(P2 & 0x1f) | 0xa0;P2=(P2 & 0x1f);
  46   1        P0=0xff;P2=(P2 & 0x1f) | 0xc0;P2=(P2 & 0x1f); //段码
  47   1        P0=0xff;P2=(P2 & 0x1f) | 0xe0;P2=(P2 & 0x1f); //位码
  48   1      }
  49          
  50          
  51          void Timer0Init(void)   //1ms 12mhz
  52          {
  53   1        TMOD &= 0xF0;   
  54   1        TL0 = 0x18;   
C51 COMPILER V9.54   MAIN                                                                  12/05/2024 17:43:10 PAGE 2   

  55   1        TH0 = 0xFC; 
  56   1        TF0 = 0;    
  57   1        TR0 = 1;    
  58   1        ET0 = 1;
  59   1        EA = 1;
  60   1      }
  61          
  62          unsigned char key_scan()
  63          {
  64   1          static unsigned char num = 0; 
  65   1          unsigned char current_key = 0;     
  66   1      
  67   1      
  68   1          if (S7 == 0) current_key = 7;
  69   1          else if (S6 == 0) current_key = 6;
  70   1          else if (S5 == 0) current_key = 5;
  71   1          else if (S4 == 0) current_key = 4;
  72   1      
  73   1      
  74   1          if (current_key != num)  //更新
  75   1          {
  76   2              Delay(20);  
  77   2              if (current_key != num)  
  78   2              {
  79   3                  num = current_key;   
  80   3                  if (current_key != 0)     
  81   3                  {
  82   4                      while (current_key == num)  
  83   4                      {
  84   5                          if (S7 == 0) current_key = 7;
  85   5                          else if (S6 == 0) current_key = 6;
  86   5                          else if (S5 == 0) current_key = 5;
  87   5                          else if (S4 == 0) current_key = 4;
  88   5                          else current_key = 0;  
  89   5                      }
  90   4                      return num;  
  91   4                  }
  92   3              }
  93   2          }
  94   1      
  95   1          return 0;  
  96   1      }
  97          
  98          unsigned char code duan[] = {                        
  99          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
 100              0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E,
 101          // black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
 102              0xFF, 0xBF, 0x89, 0xE1, 0x8F, 0xC7, 0xC8, 0xA3, 0x8C, 0xC1, 0x87, 0xC2, 0x98, 0xAF, 0xC8, 0x91,
 103              0x40, 0x79, 0x24, 0x30, 0x19, 0x12, 0x02, 0x78, 0x00, 0x10, 0xB9
 104          };    // 0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
 105          
 106          
 107          unsigned char code wei[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};      //位码
 108          unsigned char seg[8] = {16,16,16,16,16,16,16,16};
 109          
 110          
 111          void Seg_Show(){
 112   1        static unsigned char num;
 113   1        
 114   1        P0=0xff;P2=(P2 & 0x1f) | 0xe0;P2=(P2 & 0x1f);
 115   1        P0=wei[num];P2=(P2 & 0x1f) | 0xc0;P2=(P2 & 0x1f);
 116   1        P0=duan[seg[num]];P2=(P2 & 0x1f) | 0xe0;P2=(P2 & 0x1f);
C51 COMPILER V9.54   MAIN                                                                  12/05/2024 17:43:10 PAGE 3   

 117   1        
 118   1        num++;
 119   1        num%=8;
 120   1      }
 121          
 122          void Seg_Set(unsigned char t1,t2,t3,t4,t5,t6,t7,t8){
 123   1        seg[0]=t1;
 124   1        seg[1]=t2;
 125   1        seg[2]=t3;
 126   1        seg[3]=t4;
 127   1        seg[4]=t5;
 128   1        seg[5]=t6;
 129   1        seg[6]=t7;
 130   1        seg[7]=t8;
 131   1        
 132   1      }
 133          
 134          
 135          void main()
 136          {
 137   1        Sys_Init();
 138   1        Timer0Init();
 139   1        csb_timer_init();
 140   1        while(1)
 141   1        {
 142   2           if(key_flag)
 143   2          {
 144   3             key_flag=0;
 145   3             num = key_scan();
 146   3          }
 147   2           if(csb_measure_flag)
 148   2           {
 149   3             csb_measure_flag=0;
 150   3             distance = csb_measure();
 151   3           }
 152   2          switch (mode)
 153   2          {
 154   3            case 1: ce_ju_show();break;
 155   3            case 2: shu_ju_hui_show();break;
 156   3            case 3: can_shu_set();break;
 157   3          }
 158   2          
 159   2        }
 160   1      }
 161          
 162          void ce_ju_show()
 163          {
 164   1        
 165   1        P2=(P2 & 0x1f) | 0x80;   //mode2 回显模式回来之后 ，把灯全关
 166   1        P0=0xff;
 167   1        
 168   1        if(num==6)
 169   1        {
 170   2          mode=3;
 171   2          num=0;
 172   2        }
 173   1        
 174   1        if(num==5)
 175   1        {
 176   2          mode=2;
 177   2          num=0;
 178   2          n=-1;
C51 COMPILER V9.54   MAIN                                                                  12/05/2024 17:43:10 PAGE 4   

 179   2        }
 180   1        
 181   1        if(num==7)
 182   1        {
 183   2          cao_zuo=~cao_zuo;
 184   2          num=0;
 185   2        }
 186   1        if(num==4)
 187   1        {
 188   2          
 189   2          //////////////////////
 190   2            led1_blink_flag = 1;   // ?? LED1 ????
 191   2            led1_blink_count = 0;  // ??????
 192   2          /////////////////////////
 193   2          
 194   2          num=0;
 195   2          i++;
 196   2          if(distance>255-mangqu)
 197   2          {
 198   3            distance=255-mangqu;
 199   3          }
 200   2          if(distance<mangqu)
 201   2          {
 202   3            distance=mangqu;
 203   3          }
 204   2          temp_distance[i]=distance;  //按下一次 temp[0]=distance i=0再按一次 temp[1]=distance i=1
 205   2          i=i%10;
 206   2        }
 207   1        
 208   1        
 209   1        if(cao_zuo==0)
 210   1        {
 211   2          processed_data=temp_distance[i-1]; //上一次数据
 212   2        }else{
 213   2          processed_data=temp_distance[i]+temp_distance[i-1];  //本次+上次
 214   2        }
 215   1        if(i>=0)
 216   1        {
 217   2         Seg_Set(cao_zuo,16,processed_data/100,processed_data/10%10,processed_data%10+32,temp_distance[i]/100,te
             -mp_distance[i]/10%10,temp_distance[i]%10);
 218   2        }else{
 219   2         Seg_Set(cao_zuo,16,0,0,32,distance/100,distance/10%10,distance%10);
 220   2        }
 221   1      }
 222          
 223          void shu_ju_hui_show()
 224          { 
 225   1        P2=(P2 & 0x1f) | 0x80;   //灯全亮
 226   1        P0=0x00;
 227   1        P2=(P2 & 0x1f);
 228   1        
 229   1        if(num==5)
 230   1        {
 231   2          mode=1;  //返回测距模式
 232   2          num=0;
 233   2        }
 234   1        if(num==7)  //回显+1
 235   1        {
 236   2          num=0;
 237   2          n++;
 238   2          n=n%10;
 239   2        }
C51 COMPILER V9.54   MAIN                                                                  12/05/2024 17:43:10 PAGE 5   

 240   1        if(n>=0)
 241   1        {
 242   2        Seg_Set(n/10,n%10,16,16,16,temp_distance[n]/100,temp_distance[n]/10%10,temp_distance[n]%10);  //数据回显
 243   2        }else{
 244   2        Seg_Set(0,0,0,0,0,0,0,0);
 245   2        }
 246   1      }
 247            
 248          void can_shu_set()
 249          {
 250   1        P2=(P2 & 0x1f) | 0x80;   //灯全亮
 251   1        P0=0x00;
 252   1        P2=(P2 & 0x1f);
 253   1        if(num==6)
 254   1        {
 255   2          mode=1;
 256   2          num=0;
 257   2        }
 258   1        if(num==7)
 259   1        {
 260   2          mangqu+=10;
 261   2          if(mangqu>90)
 262   2          {
 263   3            mangqu=0;
 264   3          }
 265   2        }
 266   1        Seg_Set(15,16,16,16,16,16,mangqu/10,mangqu%10);  //F  +mangqu
 267   1      }
 268          
 269          
 270          void timer0server() interrupt 1
 271          {
 272   1         Seg_Show();
 273   1         count++;
 274   1         if(count%10==0)
 275   1         {
 276   2            key_flag=1;
 277   2         }
 278   1         if(count%50==0)
 279   1         {
 280   2           csb_measure_flag=1;
 281   2           ////////////////////////////////////////
 282   2                if (led1_blink_flag)
 283   2              {
 284   3                  led1_state = ~led1_state; 
 285   3                  P2 = (P2 & 0x1f) | 0x80; 
 286   3                  P0 = led1_state ? 0xFE : 0xFF; 
 287   3      
 288   3                  if (led1_blink_count >= 20) 
 289   3                  {
 290   4                      led1_blink_flag = 0;    
 291   4                      led1_blink_count = 0;   
 292   4                      P0 = 0xFF;              
 293   4                  }
 294   3                  else
 295   3                  {
 296   4                      led1_blink_count++; 
 297   4                  }
 298   3                  
 299   3              }
 300   2          //////////////////////////////////////////////////////
 301   2         }
C51 COMPILER V9.54   MAIN                                                                  12/05/2024 17:43:10 PAGE 6   

 302   1         
 303   1         count%=1000;
 304   1      }
 305          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1070    ----
   CONSTANT SIZE    =     51    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     32      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
